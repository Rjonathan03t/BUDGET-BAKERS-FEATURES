openapi: 3.0.3
info:
  title: Budget bakers API
  version: 1.0.0
  description: Specification about budget bakers application.
externalDocs:
  url: https://github.com/Rjonathan03t/Budget-Bakers
  description: GITHUB - STD22105 - STD22107
servers:
  - url: https://BudgetBakers.com
paths:
  /Account:
    get:
      tags:
        - account
      summary: Get all accounts
      description: The returned accounts are ordered by updated datetime.
      operationId: getAccounts
      parameters:
        - in: query
          name: accountNumber
          description: Filter return account by given number
          required: false
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            properties:
              starDate:
                type: string
                format: date
              endDate:
                type: string
                format: date
      responses:
        200:
          description: The list of filtered account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/account'

  /Currency:
    get:
      tags:
        - currency
      summary: Get all currencies
      description: Retrieve a list of all currencies.
      operationId: getAllCurrencies
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currency'

    post:
      tags:
        - currency
      summary: Create a new currency
      description: Add a new currency to the system.
      operationId: createCurrency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currency'
      responses:
        201:
          description: Currency created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
        400:
          description: Invalid request data

  /Currency/{id}:
    get:
      tags:
        - currency
      summary: Get currency by ID
      description: Retrieve currency information based on its ID.
      operationId: getCurrencyById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
        404:
          description: Currency not found

    put:
      tags:
        - currency
      summary: Update currency by ID
      description: Update currency information based on its ID.
      operationId: updateCurrencyById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currency'
      responses:
        200:
          description: Currency updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
        404:
          description: Currency not found

    delete:
      tags:
        - currency
      summary: Delete currency by ID
      description: Remove a currency from the system based on its ID.
      operationId: deleteCurrencyById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Currency deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
        404:
          description: Currency not found

components:
  schemas:
    account:
      type: object
      properties:
        accountId:
          type: integer
        username:
          type: string
        number:
          type: integer
        balance:
          type: integer
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE

    currency:
      type: object
      properties:
        id_currency:
          type: integer
        name:
          type: string
        code:
          type: string
      required:
        - name
        - code
